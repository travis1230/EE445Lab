ARM Linker, 5.03 [Build 76] [MDK-ARM Lite]

==============================================================================

Section Cross References

    startup.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(RESET) refers to startup.o(STACK) for StackMem
    startup.o(RESET) refers to osasm.o(.text) for OS_ISR
    startup.o(RESET) refers to adct0atrigger.o(i.ADC0Seq3_Handler) for ADC0Seq3_Handler
    startup.o(RESET) refers to lab2.o(i.Timer0A_Handler) for Timer0A_Handler
    startup.o(RESET) refers to lab2.o(i.Timer1A_Handler) for Timer1A_Handler
    startup.o(RESET) refers to lab2.o(i.Timer2A_Handler) for Timer2A_Handler
    startup.o(RESET) refers to lab2.o(i.Timer3A_Handler) for Timer3A_Handler
    startup.o(RESET) refers to __main.o(!!!main) for __main
    startup.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(.text) refers to startup.o(HEAP) for HeapMem
    startup.o(.text) refers to startup.o(STACK) for StackMem
    osasm.o(.text) refers to lab2.o(.data) for RunPt
    lab2.o(i.BackgroundThread1c) refers to lab2.o(i.OS_Signal) for OS_Signal
    lab2.o(i.BackgroundThread1c) refers to lab2.o(.data) for Count1
    lab2.o(i.BackgroundThread1d) refers to lab2.o(.data) for i
    lab2.o(i.BackgroundThread5c) refers to lab2.o(i.OS_AddThread) for OS_AddThread
    lab2.o(i.BackgroundThread5c) refers to lab2.o(i.Thread4c) for Thread4c
    lab2.o(i.BackgroundThread5c) refers to lab2.o(.data) for NumCreated
    lab2.o(i.BackgroundThread5d) refers to lab2.o(i.OS_AddThread) for OS_AddThread
    lab2.o(i.BackgroundThread5d) refers to lab2.o(i.Thread4d) for Thread4d
    lab2.o(i.BackgroundThread5d) refers to lab2.o(.data) for NumCreated
    lab2.o(i.ButtonWork) refers to lab2.o(i.OS_Sleep) for OS_Sleep
    lab2.o(i.ButtonWork) refers to lab2.o(i.OS_Kill) for OS_Kill
    lab2.o(i.ButtonWork) refers to lab2.o(.data) for NumCreated
    lab2.o(i.Consumer) refers to adct0atrigger.o(i.ADC_Collect) for ADC_Collect
    lab2.o(i.Consumer) refers to lab2.o(i.OS_AddThread) for OS_AddThread
    lab2.o(i.Consumer) refers to lab2.o(i.OS_Fifo_Get) for OS_Fifo_Get
    lab2.o(i.Consumer) refers to lab2.o(i.OS_MailBox_Send) for OS_MailBox_Send
    lab2.o(i.Consumer) refers to lab2.o(i.OS_Kill) for OS_Kill
    lab2.o(i.Consumer) refers to lab2.o(i.Producer) for Producer
    lab2.o(i.Consumer) refers to lab2.o(i.Display) for Display
    lab2.o(i.Consumer) refers to lab2.o(.data) for NumCreated
    lab2.o(i.Consumer) refers to lab2.o(.bss) for x
    lab2.o(i.DAS) refers to adct0atrigger.o(i.ADC_In) for ADC_In
    lab2.o(i.DAS) refers to lab2.o(i.Filter) for Filter
    lab2.o(i.DAS) refers to lab2.o(.data) for NumSamples
    lab2.o(i.DAS) refers to lab2.o(.bss) for JitterHistogram
    lab2.o(i.Display) refers to lab2.o(i.OS_MailBox_Recv) for OS_MailBox_Recv
    lab2.o(i.Display) refers to lab2.o(i.OS_Kill) for OS_Kill
    lab2.o(i.Display) refers to lab2.o(.data) for NumSamples
    lab2.o(i.Filter) refers to lab2.o(.data) for n
    lab2.o(i.Filter) refers to lab2.o(.bss) for x
    lab2.o(i.OS_AddPeriodicThread) refers to lab2.o(.data) for timer_occupied
    lab2.o(i.OS_AddPeriodicThread) refers to lab2.o(.bss) for timer_init_fns
    lab2.o(i.OS_AddThread) refers to startup.o(.text) for StartCritical
    lab2.o(i.OS_AddThread) refers to lab2.o(i.tcbs_all_full) for tcbs_all_full
    lab2.o(i.OS_AddThread) refers to lab2.o(i.tcbs_all_empty) for tcbs_all_empty
    lab2.o(i.OS_AddThread) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    lab2.o(i.OS_AddThread) refers to lab2.o(i.tcb_is_empty) for tcb_is_empty
    lab2.o(i.OS_AddThread) refers to lab2.o(i.SetInitialStack) for SetInitialStack
    lab2.o(i.OS_AddThread) refers to lab2.o(.data) for RunPt
    lab2.o(i.OS_AddThread) refers to lab2.o(.bss) for tcbs
    lab2.o(i.OS_Init) refers to osasm.o(.text) for OS_DisableInterrupts
    lab2.o(i.OS_Init) refers to pll.o(i.PLL_Init) for PLL_Init
    lab2.o(i.OS_Init) refers to systickints.o(i.SysTick_Init) for SysTick_Init
    lab2.o(i.OS_Init) refers to lab2.o(.data) for preemptive_mode
    lab2.o(i.OS_Init) refers to lab2.o(.bss) for tcbs
    lab2.o(i.OS_Init) refers to lab2.o(i.Timer0A_Init) for Timer0A_Init
    lab2.o(i.OS_Init) refers to lab2.o(i.Timer1A_Init) for Timer1A_Init
    lab2.o(i.OS_Init) refers to lab2.o(i.Timer2A_Init) for Timer2A_Init
    lab2.o(i.OS_Init) refers to lab2.o(i.Timer3A_Init) for Timer3A_Init
    lab2.o(i.OS_Kill) refers to startup.o(.text) for StartCritical
    lab2.o(i.OS_Kill) refers to lab2.o(i.tcb_is_empty) for tcb_is_empty
    lab2.o(i.OS_Kill) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    lab2.o(i.OS_Kill) refers to lab2.o(i.tcb_set_empty) for tcb_set_empty
    lab2.o(i.OS_Kill) refers to lab2.o(.bss) for tcbs
    lab2.o(i.OS_Kill) refers to lab2.o(.data) for RunPt
    lab2.o(i.OS_Launch) refers to osasm.o(.text) for StartOS
    lab2.o(i.OS_Launch) refers to lab2.o(.data) for preemptive_mode
    lab2.o(i.OS_Signal) refers to startup.o(.text) for StartCritical
    lab2.o(i.OS_Sleep) refers to assert.o(.text) for __aeabi_assert
    lab2.o(i.OS_Sleep) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    lab2.o(i.OS_Sleep) refers to lab2.o(i.OS_Suspend) for OS_Suspend
    lab2.o(i.OS_Sleep) refers to lab2.o(.data) for preemptive_mode
    lab2.o(i.OS_Wait) refers to osasm.o(.text) for OS_DisableInterrupts
    lab2.o(i.OS_Wait) refers to lab2.o(i.OS_Suspend) for OS_Suspend
    lab2.o(i.PID) refers to lab2.o(.data) for PIDWork
    lab2.o(i.Producer) refers to lab2.o(i.OS_Fifo_Put) for OS_Fifo_Put
    lab2.o(i.Producer) refers to lab2.o(.data) for NumSamples
    lab2.o(i.SW1Push) refers to lab2.o(i.OS_AddThread) for OS_AddThread
    lab2.o(i.SW1Push) refers to lab2.o(i.ButtonWork) for ButtonWork
    lab2.o(i.SW1Push) refers to lab2.o(.data) for NumCreated
    lab2.o(i.SW2Push) refers to lab2.o(i.OS_AddThread) for OS_AddThread
    lab2.o(i.SW2Push) refers to lab2.o(i.ButtonWork) for ButtonWork
    lab2.o(i.SW2Push) refers to lab2.o(.data) for NumCreated
    lab2.o(i.SetInitialStack) refers to lab2.o(.bss) for Stacks
    lab2.o(i.TestMain0) refers to lab2.o(i.OS_Init) for OS_Init
    lab2.o(i.TestMain0) refers to lab2.o(i.PortE_Init) for PortE_Init
    lab2.o(i.TestMain0) refers to lab2.o(i.OS_AddSW1Task) for OS_AddSW1Task
    lab2.o(i.TestMain0) refers to lab2.o(i.OS_AddPeriodicThread) for OS_AddPeriodicThread
    lab2.o(i.TestMain0) refers to lab2.o(i.OS_AddThread) for OS_AddThread
    lab2.o(i.TestMain0) refers to lab2.o(i.OS_Launch) for OS_Launch
    lab2.o(i.TestMain0) refers to lab2.o(.data) for DataLost
    lab2.o(i.TestMain0) refers to lab2.o(i.SW1Push) for SW1Push
    lab2.o(i.TestMain0) refers to lab2.o(i.DAS) for DAS
    lab2.o(i.TestMain0) refers to lab2.o(i.Consumer) for Consumer
    lab2.o(i.TestMain0) refers to lab2.o(i.PID) for PID
    lab2.o(i.Testmain1) refers to lab2.o(i.OS_Init) for OS_Init
    lab2.o(i.Testmain1) refers to lab2.o(i.PortE_Init) for PortE_Init
    lab2.o(i.Testmain1) refers to lab2.o(i.OS_AddThread) for OS_AddThread
    lab2.o(i.Testmain1) refers to lab2.o(i.OS_Launch) for OS_Launch
    lab2.o(i.Testmain1) refers to lab2.o(.data) for NumCreated
    lab2.o(i.Testmain1) refers to lab2.o(i.Thread1) for Thread1
    lab2.o(i.Testmain1) refers to lab2.o(i.Thread2) for Thread2
    lab2.o(i.Testmain1) refers to lab2.o(i.Thread3) for Thread3
    lab2.o(i.Testmain2) refers to lab2.o(i.OS_Init) for OS_Init
    lab2.o(i.Testmain2) refers to lab2.o(i.PortE_Init) for PortE_Init
    lab2.o(i.Testmain2) refers to lab2.o(i.OS_AddThread) for OS_AddThread
    lab2.o(i.Testmain2) refers to lab2.o(i.OS_Launch) for OS_Launch
    lab2.o(i.Testmain2) refers to lab2.o(.data) for NumCreated
    lab2.o(i.Testmain2) refers to lab2.o(i.Thread1b) for Thread1b
    lab2.o(i.Testmain2) refers to lab2.o(i.Thread2b) for Thread2b
    lab2.o(i.Testmain2) refers to lab2.o(i.Thread3b) for Thread3b
    lab2.o(i.Testmain3) refers to lab2.o(i.OS_Init) for OS_Init
    lab2.o(i.Testmain3) refers to lab2.o(i.OS_AddSW1Task) for OS_AddSW1Task
    lab2.o(i.Testmain3) refers to lab2.o(i.OS_AddThread) for OS_AddThread
    lab2.o(i.Testmain3) refers to lab2.o(i.OS_Launch) for OS_Launch
    lab2.o(i.Testmain3) refers to lab2.o(.data) for Count4
    lab2.o(i.Testmain3) refers to lab2.o(i.BackgroundThread5c) for BackgroundThread5c
    lab2.o(i.Testmain3) refers to lab2.o(i.Thread2c) for Thread2c
    lab2.o(i.Testmain3) refers to lab2.o(i.Thread3c) for Thread3c
    lab2.o(i.Testmain3) refers to lab2.o(i.Thread4c) for Thread4c
    lab2.o(i.Testmain4) refers to lab2.o(i.OS_Init) for OS_Init
    lab2.o(i.Testmain4) refers to lab2.o(i.OS_AddPeriodicThread) for OS_AddPeriodicThread
    lab2.o(i.Testmain4) refers to lab2.o(i.OS_AddSW1Task) for OS_AddSW1Task
    lab2.o(i.Testmain4) refers to lab2.o(i.OS_AddThread) for OS_AddThread
    lab2.o(i.Testmain4) refers to lab2.o(i.OS_Launch) for OS_Launch
    lab2.o(i.Testmain4) refers to lab2.o(.data) for Count4
    lab2.o(i.Testmain4) refers to lab2.o(i.BackgroundThread1d) for BackgroundThread1d
    lab2.o(i.Testmain4) refers to lab2.o(i.BackgroundThread5d) for BackgroundThread5d
    lab2.o(i.Testmain4) refers to lab2.o(i.Thread2d) for Thread2d
    lab2.o(i.Testmain4) refers to lab2.o(i.Thread3d) for Thread3d
    lab2.o(i.Testmain4) refers to lab2.o(i.Thread4d) for Thread4d
    lab2.o(i.Thread1) refers to lab2.o(i.OS_Suspend) for OS_Suspend
    lab2.o(i.Thread1) refers to lab2.o(.data) for Count1
    lab2.o(i.Thread1b) refers to lab2.o(.data) for Count1
    lab2.o(i.Thread2) refers to lab2.o(i.OS_Suspend) for OS_Suspend
    lab2.o(i.Thread2) refers to lab2.o(.data) for Count2
    lab2.o(i.Thread2b) refers to lab2.o(.data) for Count2
    lab2.o(i.Thread2c) refers to lab2.o(i.OS_InitSemaphore) for OS_InitSemaphore
    lab2.o(i.Thread2c) refers to lab2.o(i.OS_AddThread) for OS_AddThread
    lab2.o(i.Thread2c) refers to lab2.o(i.OS_AddPeriodicThread) for OS_AddPeriodicThread
    lab2.o(i.Thread2c) refers to lab2.o(i.OS_Wait) for OS_Wait
    lab2.o(i.Thread2c) refers to lab2.o(.data) for Readyc
    lab2.o(i.Thread2c) refers to lab2.o(i.Thread5c) for Thread5c
    lab2.o(i.Thread2c) refers to lab2.o(i.BackgroundThread1c) for BackgroundThread1c
    lab2.o(i.Thread2d) refers to lab2.o(i.OS_InitSemaphore) for OS_InitSemaphore
    lab2.o(i.Thread2d) refers to lab2.o(.data) for Readyd
    lab2.o(i.Thread3) refers to lab2.o(i.OS_Suspend) for OS_Suspend
    lab2.o(i.Thread3) refers to lab2.o(.data) for Count3
    lab2.o(i.Thread3b) refers to lab2.o(.data) for Count3
    lab2.o(i.Thread3c) refers to lab2.o(.data) for Count3
    lab2.o(i.Thread3d) refers to lab2.o(.data) for Count3
    lab2.o(i.Thread4c) refers to lab2.o(i.OS_Sleep) for OS_Sleep
    lab2.o(i.Thread4c) refers to lab2.o(i.OS_Kill) for OS_Kill
    lab2.o(i.Thread4c) refers to lab2.o(.data) for Count4
    lab2.o(i.Thread4d) refers to lab2.o(i.OS_Sleep) for OS_Sleep
    lab2.o(i.Thread4d) refers to lab2.o(i.OS_Kill) for OS_Kill
    lab2.o(i.Thread4d) refers to lab2.o(.data) for Count4
    lab2.o(i.Thread5c) refers to lab2.o(i.OS_Wait) for OS_Wait
    lab2.o(i.Thread5c) refers to lab2.o(.data) for Readyc
    lab2.o(i.Timer0A_Handler) refers to lab2.o(.data) for PeriodicTask0A
    lab2.o(i.Timer0A_Init) refers to startup.o(.text) for StartCritical
    lab2.o(i.Timer0A_Init) refers to lab2.o(.data) for PeriodicTask0A
    lab2.o(i.Timer1A_Handler) refers to lab2.o(.data) for PeriodicTask1A
    lab2.o(i.Timer1A_Init) refers to lab2.o(.data) for PeriodicTask1A
    lab2.o(i.Timer2A_Handler) refers to lab2.o(.data) for PeriodicTask2A
    lab2.o(i.Timer2A_Init) refers to lab2.o(.data) for PeriodicTask2A
    lab2.o(i.Timer3A_Handler) refers to lab2.o(.data) for PeriodicTask3A
    lab2.o(i.Timer3A_Init) refers to lab2.o(.data) for PeriodicTask3A
    lab2.o(i.main) refers to lab2.o(i.PortE_Init) for PortE_Init
    lab2.o(i.main) refers to lab2.o(i.OS_Init) for OS_Init
    lab2.o(i.main) refers to lab2.o(i.OS_AddThread) for OS_AddThread
    lab2.o(i.main) refers to lab2.o(i.OS_Launch) for OS_Launch
    lab2.o(i.main) refers to lab2.o(.data) for NumCreated
    lab2.o(i.main) refers to lab2.o(i.Thread8) for Thread8
    lab2.o(i.tcbs_all_empty) refers to lab2.o(i.tcb_is_empty) for tcb_is_empty
    lab2.o(i.tcbs_all_empty) refers to lab2.o(.bss) for tcbs
    lab2.o(i.tcbs_all_full) refers to lab2.o(i.tcb_is_empty) for tcb_is_empty
    lab2.o(i.tcbs_all_full) refers to lab2.o(.bss) for tcbs
    systickints.o(i.SysTick_Init) refers to startup.o(.text) for StartCritical
    adct0atrigger.o(i.ADC0Seq3_Handler) refers to adct0atrigger.o(.data) for ADCvalue
    adct0atrigger.o(i.ADC0_InitTimer0ATriggerSeq3) refers to startup.o(.text) for DisableInterrupts
    adct0atrigger.o(i.ADC0_InitTimer0ATriggerSeq3PD3) refers to startup.o(.text) for EnableInterrupts
    adct0atrigger.o(i.ADC_Collect) refers to adct0atrigger.o(i.ADC0_InitTimer0ATriggerSeq3) for ADC0_InitTimer0ATriggerSeq3
    adct0atrigger.o(i.ADC_Collect) refers to adct0atrigger.o(.data) for my_buffer
    adct0atrigger.o(i.ADC_In) refers to adct0atrigger.o(.data) for ADCvalue
    adct0atrigger.o(i.ADC_Open) refers to adct0atrigger.o(i.ADC0_InitTimer0ATriggerSeq3) for ADC0_InitTimer0ATriggerSeq3
    adct0atrigger.o(i.ADC_Stop) refers to adct0atrigger.o(.data) for buffer_flag
    assert.o(.text) refers to assert_puts.o(.text) for __assert_puts
    assert.o(.text) refers to abort.o(.text) for abort
    __main.o(!!!main) refers to rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_ldiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    abort.o(.text) refers to defsig_abrt_outer.o(.text) for __rt_SIGABRT
    abort.o(.text) refers (Weak) to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    abort.o(.text) refers to sys_exit.o(.text) for _sys_exit
    assert_puts.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to lab2.o(i.main) for main
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    rtentry4.o(.ARM.exidx) refers to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    defsig_abrt_outer.o(.text) refers to defsig_abrt_inner.o(.text) for __rt_SIGABRT_inner
    defsig_abrt_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_abrt_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup.o(.text) for __user_initial_stackheap
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002A) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000008) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000F) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000031) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$0000000E) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000024) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000025) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    defsig.o(CL$$defsig) refers to defsig_abrt_inner.o(.text) for __rt_SIGABRT_inner
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000006) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000009) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise


==============================================================================

Removing Unused input sections from the image.

    Removing lab2.o(i.BackgroundThread1c), (28 bytes).
    Removing lab2.o(i.BackgroundThread1d), (56 bytes).
    Removing lab2.o(i.BackgroundThread5c), (32 bytes).
    Removing lab2.o(i.BackgroundThread5d), (32 bytes).
    Removing lab2.o(i.ButtonWork), (200 bytes).
    Removing lab2.o(i.Consumer), (144 bytes).
    Removing lab2.o(i.DAS), (192 bytes).
    Removing lab2.o(i.Display), (108 bytes).
    Removing lab2.o(i.Filter), (200 bytes).
    Removing lab2.o(i.OS_AddPeriodicThread), (84 bytes).
    Removing lab2.o(i.OS_AddSW1Task), (4 bytes).
    Removing lab2.o(i.OS_AddSW2Task), (4 bytes).
    Removing lab2.o(i.OS_Fifo_Get), (2 bytes).
    Removing lab2.o(i.OS_Fifo_Put), (4 bytes).
    Removing lab2.o(i.OS_InitSemaphore), (4 bytes).
    Removing lab2.o(i.OS_Kill), (136 bytes).
    Removing lab2.o(i.OS_MailBox_Recv), (2 bytes).
    Removing lab2.o(i.OS_MailBox_Send), (2 bytes).
    Removing lab2.o(i.OS_Signal), (24 bytes).
    Removing lab2.o(i.OS_Sleep), (108 bytes).
    Removing lab2.o(i.OS_Suspend), (24 bytes).
    Removing lab2.o(i.OS_Wait), (40 bytes).
    Removing lab2.o(i.PID), (124 bytes).
    Removing lab2.o(i.Producer), (52 bytes).
    Removing lab2.o(i.SW1Push), (44 bytes).
    Removing lab2.o(i.SW2Push), (44 bytes).
    Removing lab2.o(i.TestMain0), (176 bytes).
    Removing lab2.o(i.Testmain1), (104 bytes).
    Removing lab2.o(i.Testmain2), (104 bytes).
    Removing lab2.o(i.Testmain3), (120 bytes).
    Removing lab2.o(i.Testmain4), (136 bytes).
    Removing lab2.o(i.Thread1), (44 bytes).
    Removing lab2.o(i.Thread1b), (40 bytes).
    Removing lab2.o(i.Thread2), (44 bytes).
    Removing lab2.o(i.Thread2b), (40 bytes).
    Removing lab2.o(i.Thread2c), (108 bytes).
    Removing lab2.o(i.Thread2d), (52 bytes).
    Removing lab2.o(i.Thread3), (44 bytes).
    Removing lab2.o(i.Thread3b), (40 bytes).
    Removing lab2.o(i.Thread3c), (24 bytes).
    Removing lab2.o(i.Thread3d), (24 bytes).
    Removing lab2.o(i.Thread4c), (48 bytes).
    Removing lab2.o(i.Thread4d), (44 bytes).
    Removing lab2.o(i.Thread5c), (60 bytes).
    Removing lab2.o(i.tcb_set_empty), (8 bytes).
    Removing lab2.o(.constdata), (4 bytes).
    Removing adct0atrigger.o(i.ADC0_InitTimer0ATriggerSeq3), (1072 bytes).
    Removing adct0atrigger.o(i.ADC0_InitTimer0ATriggerSeq3PD3), (304 bytes).
    Removing adct0atrigger.o(i.ADC_Collect), (60 bytes).
    Removing adct0atrigger.o(i.ADC_In), (12 bytes).
    Removing adct0atrigger.o(i.ADC_Open), (16 bytes).
    Removing adct0atrigger.o(i.ADC_Stop), (12 bytes).

52 unused section(s) (total 4434 bytes) removed from the image.

==============================================================================

Memory Map of the image

  Image Entry point : 0x00000000

  Load Region LR_1 (Base: 0x00000000, Size: 0x00000c60, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Base: 0x00000000, Size: 0x00000bc0, Max: 0xffffffff, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000284   Code   RO            3  * RESET               startup.o
    0x00000284   0x00000008   Code   RO          523  * !!!main             c_w.l(__main.o)
    0x0000028c   0x00000002   Code   RO          581    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0000028e   0x00000000   Code   RO          594    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          597    .ARM.Collect$$libinit$$00000008  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          599    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          601    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          604    .ARM.Collect$$libinit$$0000000F  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          606    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          608    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          610    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          612    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          614    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          616    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          618    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          620    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          622    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          624    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          628    .ARM.Collect$$libinit$$0000002A  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          630    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          632    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          634    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0000028e   0x00000002   Code   RO          635    .ARM.Collect$$libinit$$00000031  c_w.l(libinit2.o)
    0x00000290   0x00000002   Code   RO          669    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x00000292   0x00000000   Code   RO          680    .ARM.Collect$$libshutdown$$00000003  c_w.l(libshutdown2.o)
    0x00000292   0x00000000   Code   RO          683    .ARM.Collect$$libshutdown$$00000006  c_w.l(libshutdown2.o)
    0x00000292   0x00000000   Code   RO          686    .ARM.Collect$$libshutdown$$00000009  c_w.l(libshutdown2.o)
    0x00000292   0x00000000   Code   RO          688    .ARM.Collect$$libshutdown$$0000000B  c_w.l(libshutdown2.o)
    0x00000292   0x00000000   Code   RO          691    .ARM.Collect$$libshutdown$$0000000E  c_w.l(libshutdown2.o)
    0x00000292   0x00000002   Code   RO          692    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x00000294   0x00000000   Code   RO          525    .ARM.Collect$$rtentry$$00000000  c_w.l(rtentry.o)
    0x00000294   0x00000000   Code   RO          539    .ARM.Collect$$rtentry$$00000002  c_w.l(rtentry2.o)
    0x00000294   0x00000006   Code   RO          551    .ARM.Collect$$rtentry$$00000004  c_w.l(rtentry4.o)
    0x0000029a   0x00000000   Code   RO          541    .ARM.Collect$$rtentry$$00000009  c_w.l(rtentry2.o)
    0x0000029a   0x00000004   Code   RO          542    .ARM.Collect$$rtentry$$0000000A  c_w.l(rtentry2.o)
    0x0000029e   0x00000000   Code   RO          544    .ARM.Collect$$rtentry$$0000000C  c_w.l(rtentry2.o)
    0x0000029e   0x00000008   Code   RO          545    .ARM.Collect$$rtentry$$0000000D  c_w.l(rtentry2.o)
    0x000002a6   0x00000002   Code   RO          585    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x000002a8   0x00000000   Code   RO          637    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x000002a8   0x00000004   Code   RO          638    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x000002ac   0x00000006   Code   RO          639    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x000002b2   0x00000002   PAD
    0x000002b4   0x00000030   Code   RO            4    .text               startup.o
    0x000002e4   0x0000004c   Code   RO           12    .text               osasm.o
    0x00000330   0x00000064   Code   RO          519    .text               c_w.l(rt_memcpy_w.o)
    0x00000394   0x00000006   Code   RO          521    .text               c_w.l(heapauxi.o)
    0x0000039a   0x00000002   PAD
    0x0000039c   0x0000000c   Code   RO          536    .text               c_w.l(sys_exit.o)
    0x000003a8   0x00000002   Code   RO          559    .text               c_w.l(use_no_semi.o)
    0x000003aa   0x00000000   Code   RO          561    .text               c_w.l(indicate_semi.o)
    0x000003aa   0x0000004a   Code   RO          562    .text               c_w.l(sys_stackheap_outer.o)
    0x000003f4   0x0000000c   Code   RO          566    .text               c_w.l(exit.o)
    0x00000400   0x00000008   Code   RO          582    .text               c_w.l(libspace.o)
    0x00000408   0x00000068   Code   RO          462    i.ADC0Seq3_Handler  adct0atrigger.o
    0x00000470   0x00000108   Code   RO           49    i.OS_AddThread      lab2.o
    0x00000578   0x0000009c   Code   RO           52    i.OS_Init           lab2.o
    0x00000614   0x00000020   Code   RO           55    i.OS_Launch         lab2.o
    0x00000634   0x0000007c   Code   RO           15    i.PLL_Init          pll.o
    0x000006b0   0x00000074   Code   RO           63    i.PortE_Init        lab2.o
    0x00000724   0x00000150   Code   RO           67    i.SetInitialStack   lab2.o
    0x00000874   0x0000004c   Code   RO          447    i.SysTick_Init      systickints.o
    0x000008c0   0x00000014   Code   RO           86    i.Thread8           lab2.o
    0x000008d4   0x00000018   Code   RO           87    i.Timer0A_Handler   lab2.o
    0x000008ec   0x00000080   Code   RO           88    i.Timer0A_Init      lab2.o
    0x0000096c   0x00000018   Code   RO           89    i.Timer1A_Handler   lab2.o
    0x00000984   0x0000006c   Code   RO           90    i.Timer1A_Init      lab2.o
    0x000009f0   0x00000018   Code   RO           91    i.Timer2A_Handler   lab2.o
    0x00000a08   0x0000006c   Code   RO           92    i.Timer2A_Init      lab2.o
    0x00000a74   0x00000018   Code   RO           93    i.Timer3A_Handler   lab2.o
    0x00000a8c   0x00000068   Code   RO           94    i.Timer3A_Init      lab2.o
    0x00000af4   0x00000038   Code   RO           95    i.main              lab2.o
    0x00000b2c   0x00000014   Code   RO           96    i.tcb_is_empty      lab2.o
    0x00000b40   0x00000040   Code   RO           98    i.tcbs_all_empty    lab2.o
    0x00000b80   0x00000040   Code   RO           99    i.tcbs_all_full     lab2.o
    0x00000bc0   0x00000000   Data   RO          693    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Base: 0x20000000, Size: 0x000000a0, Max: 0xffffffff, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x0000008c   Data   RW          102    .data               lab2.o
    0x2000008c   0x00000014   Data   RW          469    .data               adct0atrigger.o


    Execution Region ER_ZI (Base: 0x200000a0, Size: 0x00000c98, Max: 0xffffffff, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200000a0   0x00000838   Zero   RW          100    .bss                lab2.o
    0x200008d8   0x00000060   Zero   RW          583    .bss                c_w.l(libspace.o)
    0x20000938   0x00000000   Zero   RW            2    HEAP                startup.o
    0x20000938   0x00000400   Zero   RW            1    STACK               startup.o

